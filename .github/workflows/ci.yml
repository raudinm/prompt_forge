name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:17
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run migrations
        run: |
          python manage.py migrate
        env:
          DATABASE_NAME: test_db
          DATABASE_USER: postgres
          DATABASE_PASSWORD: postgres
          DATABASE_HOST: localhost
          DATABASE_PORT: 5432
          SECRET_KEY: test-secret-key-for-ci
          DEBUG: True

      - name: Run tests with PostgreSQL
        run: |
          pytest --ds=prompt_forge.settings -v
        env:
          CI: true
          DATABASE_NAME: test_db
          DATABASE_USER: postgres
          DATABASE_PASSWORD: postgres
          DATABASE_HOST: localhost
          DATABASE_PORT: 5432
          SECRET_KEY: test-secret-key-for-ci
          DEBUG: True

      - name: Run tests with SQLite fallback
        run: |
          pytest --ds=prompt_forge.settings -v
        env:
          CI: true
          SECRET_KEY: test-secret-key-for-ci
          DEBUG: True
        # Run SQLite tests if PostgreSQL tests fail
        if: failure()
